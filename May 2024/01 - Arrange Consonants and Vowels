class Solution
{
    bool isVowel(char ch){
        return (ch == 'a' || ch == 'e' || ch == 'i' || ch == 'o' || ch == 'u');
    }
    
    public:
    // task is to complete this function
    // function should return head to the list after making 
    // necessary arrangements
    struct Node* arrangeCV(Node *head)
    {
        if(head->next == NULL)  return head;
       Node* vowel = new Node(0);
       Node* vowelTail = vowel;
       
       Node* consonent = new Node(0);
       Node* consonentTail = consonent;
       
       // now traversing the whole list.
       Node* temp = head;
       while(temp != NULL){
           if(isVowel(temp->data)){
               vowelTail -> next = temp;
               vowelTail = temp;
           }
           else{
               consonentTail->next = temp;
               consonentTail = temp;
           }
           temp = temp->next;
       }
       
       consonentTail->next = NULL;
       vowelTail->next = NULL;
       
       vowelTail->next = consonent->next;
       return vowel->next;
    }
};

